[{"D:\\Web Developer\\ReactJs\\Devfy-React-App\\Devfy-Music-Player\\src\\index.js":"1","D:\\Web Developer\\ReactJs\\Devfy-React-App\\Devfy-Music-Player\\src\\reportWebVitals.js":"2","D:\\Web Developer\\ReactJs\\Devfy-React-App\\Devfy-Music-Player\\src\\App.js":"3","D:\\Web Developer\\ReactJs\\Devfy-React-App\\Devfy-Music-Player\\src\\data.js":"4","D:\\Web Developer\\ReactJs\\Devfy-React-App\\Devfy-Music-Player\\src\\components\\Library.js":"5","D:\\Web Developer\\ReactJs\\Devfy-React-App\\Devfy-Music-Player\\src\\components\\Song.js":"6","D:\\Web Developer\\ReactJs\\Devfy-React-App\\Devfy-Music-Player\\src\\components\\Player.js":"7","D:\\Web Developer\\ReactJs\\Devfy-React-App\\Devfy-Music-Player\\src\\components\\NavBarComp.jsx":"8","D:\\Web Developer\\ReactJs\\Devfy-React-App\\Devfy-Music-Player\\src\\components\\LibrarySong.js":"9"},{"size":473,"mtime":1691386637706,"results":"10","hashOfConfig":"11"},{"size":343,"mtime":1691386637733,"results":"12","hashOfConfig":"11"},{"size":2579,"mtime":1691557250086,"results":"13","hashOfConfig":"11"},{"size":1973,"mtime":1691557340195,"results":"14","hashOfConfig":"11"},{"size":1418,"mtime":1691435180484,"results":"15","hashOfConfig":"11"},{"size":752,"mtime":1691514858509,"results":"16","hashOfConfig":"11"},{"size":4968,"mtime":1691514361636,"results":"17","hashOfConfig":"11"},{"size":1879,"mtime":1691515569151,"results":"18","hashOfConfig":"11"},{"size":1677,"mtime":1691435142738,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ef5zpr",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Web Developer\\ReactJs\\Devfy-React-App\\Devfy-Music-Player\\src\\index.js",[],"D:\\Web Developer\\ReactJs\\Devfy-React-App\\Devfy-Music-Player\\src\\reportWebVitals.js",[],"D:\\Web Developer\\ReactJs\\Devfy-React-App\\Devfy-Music-Player\\src\\App.js",["40"],"import React, { useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport NavBar from \"./components/NavBarComp\";\nimport data from \"./data\";\n\n\nconst App = () => {\n\t// Ref\n\tconst audioRef = useRef(null);\n\n\t// State\n\tconst [songs, setSongs] = useState(data());\n\tconst [currentSong, setCurrentSong] = useState(songs[0]);\n\tconst [isPlaying, setIsPlaying] = useState(false);\n\tconst [libraryStatus, setLibraryStatus] = useState(false);\n\t\n\tconst [songInfo, setSongInfo] = useState({\n\t\tcurrentTime: 0,\n\t\tduration: 0,\n\t});\n\n\t// Functions\n\tconst updateTimeHandler = (e) => {\n\t\tconst currentTime = e.target.currentTime;\n\t\tconst duration = e.target.duration;\n\t\tsetSongInfo({ ...songInfo, currentTime, duration });\n\t};\n\n\tconst songEndHandler = async () => {\n\t\tlet currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n\t\tlet nextSong = songs[(currentIndex + 1) % songs.length];\n\t\tawait setCurrentSong(nextSong);\n\n\t\tconst newSongs = songs.map((song) => {\n\t\t\tif (song.id === nextSong.id) {\n\t\t\t\treturn {\n\t\t\t\t\t...song,\n\t\t\t\t\tactive: true,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\t...song,\n\t\t\t\t\tactive: false,\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t\tsetSongs(newSongs);\n\n\t\tif (isPlaying) {\n\t\t\taudioRef.current.play();\n\t\t}\n\t};\n\n\treturn (\n\t\t<div libraryStatus={libraryStatus}>\n\n\t\t\t<div className=\"gradient1\"></div>\n\t\t\t<div className=\"gradient2\"></div>\n\n\t\t\t<NavBar libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n\t\t\t\n\t\t\t<div className=\"container-fluid\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"song_box col-12 col-lg-8 col-md-12\">\n\t\t\t\t\t\t<Song currentSong={currentSong} />\n\n\t\t\t\t\t\t<Player\n\t\t\t\t\t\t\tisPlaying={isPlaying}\n\t\t\t\t\t\t\tsetIsPlaying={setIsPlaying}\n\t\t\t\t\t\t\tcurrentSong={currentSong}\n\t\t\t\t\t\t\tsetCurrentSong={setCurrentSong}\n\t\t\t\t\t\t\taudioRef={audioRef}\n\t\t\t\t\t\t\tsongInfo={songInfo}\n\t\t\t\t\t\t\tsetSongInfo={setSongInfo}\n\t\t\t\t\t\t\tsongs={songs}\n\t\t\t\t\t\t\tsetSongs={setSongs}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<audio\n\t\t\t\t\t\t\tonLoadedMetadata={updateTimeHandler}\n\t\t\t\t\t\t\tonTimeUpdate={updateTimeHandler}\n\t\t\t\t\t\t\tonEnded={songEndHandler}\n\t\t\t\t\t\t\tref={audioRef}\n\t\t\t\t\t\t\tsrc={currentSong.audio}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"library col-12 col-lg-4 col-md-12 my-3\">\n\t\t\t\t\t\t<Library\n\t\t\t\t\t\t\tsongs={songs}\n\t\t\t\t\t\t\tsetCurrentSong={setCurrentSong}\n\t\t\t\t\t\t\taudioRef={audioRef}\n\t\t\t\t\t\t\tisPlaying={isPlaying}\n\t\t\t\t\t\t\tsetSongs={setSongs}\n\t\t\t\t\t\t\tlibraryStatus={libraryStatus}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t\t\n\t\t</div>\n\t);\n};\n\n\nexport default App;\n","D:\\Web Developer\\ReactJs\\Devfy-React-App\\Devfy-Music-Player\\src\\data.js",[],"D:\\Web Developer\\ReactJs\\Devfy-React-App\\Devfy-Music-Player\\src\\components\\Library.js",[],"D:\\Web Developer\\ReactJs\\Devfy-React-App\\Devfy-Music-Player\\src\\components\\Song.js",[],"D:\\Web Developer\\ReactJs\\Devfy-React-App\\Devfy-Music-Player\\src\\components\\Player.js",[],"D:\\Web Developer\\ReactJs\\Devfy-React-App\\Devfy-Music-Player\\src\\components\\NavBarComp.jsx",["41","42"],"import React from 'react';\r\nimport logo from '../Image/logo.png';\r\nimport setting from '../Image/Settings.png';\r\nimport notification from '../Image/Notification.png';\r\nimport profile from '../Image/Profile.png';\r\nimport menu from '../Image/Menu.png';\r\nimport search from '../Image/searchbar.png';\r\n\r\n\r\nconst NavBarComp = () => {\r\n    return (\r\n        <>\r\n\r\n          <nav class=\"navbar navbar-expand-lg\">\r\n            <div class=\"container-fluid\">\r\n              <a class=\"navbar-brand mx-5\" href=\"#\"><img src={logo} alt=\"logo\" /></a>\r\n              <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span class=\"navbar-toggler-icon\"></span>\r\n              </button>\r\n              \r\n              <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                  \r\n                  <li class=\"nav-item\">\r\n                    <input class=\"search_bar me-2\" type=\"search\" placeholder=\"Search for song artists etc.\" aria-label=\"Search\" />\r\n                    <img src={search} className=\"searchicon\" alt=\"searchbar\" />\r\n                  </li>\r\n\r\n                </ul>\r\n                <div class=\"explore_section\">\r\n                  <a href=\"#\" className='btn mx-3'>Explore Premium</a>\r\n                  <div className=\"btn_grp\">\r\n                    <img src={setting} alt=\"setting\" />\r\n                    <img src={notification} alt=\"noti\" />\r\n                    <img src={profile} alt=\"profile\" />\r\n                    <img src={menu} alt=\"menu\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </nav>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default NavBarComp;","D:\\Web Developer\\ReactJs\\Devfy-React-App\\Devfy-Music-Player\\src\\components\\LibrarySong.js",[],{"ruleId":"43","severity":1,"message":"44","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":14},{"ruleId":"47","severity":1,"message":"48","line":16,"column":15,"nodeType":"49","endLine":16,"endColumn":53},{"ruleId":"47","severity":1,"message":"48","line":31,"column":19,"nodeType":"49","endLine":31,"endColumn":52},"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]